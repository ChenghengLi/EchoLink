name: Unit tests + linting
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

      
    - name: Create empty .env files
      run: |
        echo "Creating empty .env files"
        touch ./frontend/.env
        touch ./backend/.env
        echo ".env files created"

    - name: Set up backend environment variables
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> ./backend/.env
        echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> ./backend/.env
        echo "ACCESS_TOKEN_EXPIRE_DAYS=${{ secrets.ACCESS_TOKEN_EXPIRE_DAYS }}" >> ./backend/.env

    - name: Set up frontend environment variables
      run: |
        echo "VITE_API_URL=http://backend:8000" >> ./frontend/.env
        echo "PLAYWRIGHT_URL=http://frontend:80" >> ./frontend/.env
        echo "PLAYWRIGHT_BACKEND_URL=http://backend:8000" >> ./frontend/.env

    - name: Build all Docker containers
      run: |
        docker compose -f docker-compose.yml build

    - name: Run the backend-test container (Unit Tests + Lint)
      run: |
        docker compose run backend-test
    
    - name: Run the frontend-test container (Unit Tests + Lint)
      run: |
        docker compose run frontend-test
        
    - name: Run e2e tests container 
      run: |
        docker compose run e2e-test

  deploy:
    needs: tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Deploy to Server
      env:
        USER: root
        HOST: 209.38.168.71
        WORKDIR: Echolink_devops
      run: |
        ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          cd $WORKDIR
          git pull https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/UB-ES-2024-F3/EchoLink.git


          # Rebuild Docker images and restart containers
          docker compose down --remove-orphans
          docker compose build  # Rebuilds images with the latest code
          docker compose up -d  # Starts containers in detached mode
        EOF
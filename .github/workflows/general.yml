name: Move Tasks to Specific State

on:
  push:
    branches:
      - 'task_*'
  pull_request:
    branches:
      - 'task_*'

jobs:
  update_status:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/supportpal/github-gh-cli:2.62.0 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1  # Fetch only the latest commit

    - name: Configure Git Safe Directory
      run: |
        git config --global --add safe.directory /__w/EchoLink/EchoLink

    - name: Install jq
      run: |
        apt-get update && apt-get install -y jq

    - name: Extract issue numbers from the last commit message
      id: extract_issues
      shell: bash
      run: |
        # Get the last commit message
        last_commit_message=$(git log -1 --pretty=%B)

        # Declare an associative array to store unique issue numbers
        declare -A issue_numbers_map

        # Extract issue numbers from the last commit message
        if [[ $last_commit_message =~ [^0-9]*([0-9]+) ]]; then
          issue_number="${BASH_REMATCH[1]}"
          issue_numbers_map["$issue_number"]=1
        fi

        # Check if any issue numbers were found
        if [ ${#issue_numbers_map[@]} -eq 0 ]; then
          echo "No issue numbers found in the last commit message"
          exit 0  # Exit gracefully if no issue numbers are found
        fi

        # Join unique issue numbers into a comma-separated string
        issue_numbers_str=$(IFS=,; echo "${!issue_numbers_map[*]}")

        # Set the issue numbers as an environment variable
        echo "issue_numbers=$issue_numbers_str" >> $GITHUB_ENV

    - name: Update project items
      if: env.issue_numbers != ''  
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        ISSUE_NUMBERS: ${{ env.issue_numbers }}
      shell: bash
      run: |
        # Split the issue numbers into an array
        IFS=',' read -r -a issue_numbers <<< "$ISSUE_NUMBERS"

        # Iterate over each issue number and update the project item
        for num in "${issue_numbers[@]}"; do
          task_id=$(gh project item-list 4 --owner UB-ES-2024-F3 --limit 1000 --format json | jq --argjson num "$num" '.items[] | select(.content.number == $num) | .id')
          if [ -n "$task_id" ]; then
            gh project item-edit --id "$task_id" --field-id PVTSSF_lADOCvtt0s4AqPZczghhQYk --project-id PVT_kwDOCvtt0s4AqPZc --single-select-option-id 47fc9ee4
          else
            echo "No task ID found for issue number $num"
          fi
        done